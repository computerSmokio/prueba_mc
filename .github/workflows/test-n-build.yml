name: Run Pytest Tests
on:
  push:
    paths:
      - 'src/**'
      - 'dockerfile'
  pull_request:
    paths:
      - 'src/**'
      - 'dockerfile'
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.0

    - name: Install dependencies
      run: pip install -r requirements/dev.txt
    
    - name: create data directory
      run: mkdir data
      
    - name: Run coverage & pytest (Test Coverage must be graeter or equal to 90%)
      run: | 
        ENVIRON="test" coverage run -m pytest
        total=$(coverage report --format=total)
        if [ $total -lt 90 ]; then
          echo "Coverage is less than 100%, actual coverage ${total}"
          exit 1
        fi
        echo "Actual coverage ${total}"
  build_n_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSER }}
          password: ${{ secrets.DOCKERPASS }}
      
      - name: Build and push Docker images with tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          docker build -t ${{ secrets.DOCKERUSER }}/json-api:${{ github.event.ref }} -f .
          docker tag ${{ secrets.DOCKERUSER }}/json-api:${{ github.event.ref }} ${{ secrets.DOCKERUSER }}/json-api:latest
          docker push ${{ secrets.DOCKERUSER }}/api:${{ github.event.ref }}
          docker push ${{ secrets.DOCKERUSER }}/api:latest
      
      - name: Build and push Docker images with PR number
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker build -t ${{ secrets.DOCKERUSER }}/json-api:dev-${{ github.event.pull_request.number }} .
          docker push ${{ secrets.DOCKERUSER }}/json-api:dev-${{ github.event.pull_request.number }}
      - name: Build and push Docker images with PR number
        if: ${{ github.event_name == 'workflows-n-pipes' }}
        run: |
          docker build -t ${{ secrets.DOCKERUSER }}/json-api:qa-$GITHUB_SHA .
          docker push ${{ secrets.DOCKERUSER }}/json-api:qa-$GITHUB_SHA
  deploy_new_container:
    uses: ./.github/workflows/update-container.yml
    with:
      docker_tag: qa-$GITHUB_SHA
      environment: 'QA'
      bastion_ip: ${{ variables.QA_BASTION_IP }}
      stack_name: ${{ variables.STACK_NAME }}

